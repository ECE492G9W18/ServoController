-- Copyright (C) 2017  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel MegaCore Function License Agreement, or other 
-- applicable license agreement, including, without limitation, 
-- that your use is for the sole purpose of programming logic 
-- devices manufactured by Intel and sold by Intel or its 
-- authorized distributors.  Please refer to the applicable 
-- agreement for further details.


-- Generated by Quartus Prime Version 17.0 (Build Build 602 07/19/2017)
-- Created on Wed Mar 14 17:28:05 2018

COMPONENT tutorial2
	PORT
	(
		CLOCK_50		:	 IN STD_LOGIC;
		KEY_N_0		:	 IN STD_LOGIC;
		HPS_DDR3_ADDR		:	 OUT STD_LOGIC_VECTOR(14 DOWNTO 0);
		HPS_DDR3_BA		:	 OUT STD_LOGIC_VECTOR(2 DOWNTO 0);
		HPS_DDR3_CK_P		:	 OUT STD_LOGIC;
		HPS_DDR3_CK_N		:	 OUT STD_LOGIC;
		HPS_DDR3_CKE		:	 OUT STD_LOGIC;
		HPS_DDR3_CS_N		:	 OUT STD_LOGIC;
		HPS_DDR3_RAS_N		:	 OUT STD_LOGIC;
		HPS_DDR3_CAS_N		:	 OUT STD_LOGIC;
		HPS_DDR3_WE_N		:	 OUT STD_LOGIC;
		HPS_DDR3_RESET_N		:	 OUT STD_LOGIC;
		HPS_DDR3_DQ		:	 INOUT STD_LOGIC_VECTOR(31 DOWNTO 0);
		HPS_DDR3_DQS_P		:	 INOUT STD_LOGIC_VECTOR(3 DOWNTO 0);
		HPS_DDR3_DQS_N		:	 INOUT STD_LOGIC_VECTOR(3 DOWNTO 0);
		HPS_DDR3_ODT		:	 OUT STD_LOGIC;
		HPS_DDR3_DM		:	 OUT STD_LOGIC_VECTOR(3 DOWNTO 0);
		HPS_DDR3_RZQ		:	 IN STD_LOGIC;
		HPS_ENET_RX_CLK		:	 IN STD_LOGIC;
		HPS_ENET_INT_N		:	 INOUT STD_LOGIC;
		HPS_ENET_MDC		:	 OUT STD_LOGIC;
		HPS_ENET_MDIO		:	 INOUT STD_LOGIC;
		HPS_ENET_RX_DATA_0		:	 IN STD_LOGIC;
		HPS_ENET_RX_DATA_1		:	 IN STD_LOGIC;
		HPS_ENET_RX_DATA_2		:	 IN STD_LOGIC;
		HPS_ENET_RX_DATA_3		:	 IN STD_LOGIC;
		HPS_ENET_RX_DV		:	 IN STD_LOGIC;
		HPS_ENET_GTX_CLK		:	 OUT STD_LOGIC;
		HPS_ENET_TX_DATA_0		:	 OUT STD_LOGIC;
		HPS_ENET_TX_DATA_1		:	 OUT STD_LOGIC;
		HPS_ENET_TX_DATA_2		:	 OUT STD_LOGIC;
		HPS_ENET_TX_DATA_3		:	 OUT STD_LOGIC;
		HPS_ENET_TX_EN		:	 OUT STD_LOGIC;
		HPS_SD_CLK		:	 OUT STD_LOGIC;
		HPS_SD_CMD		:	 INOUT STD_LOGIC;
		HPS_SD_DATA_0		:	 INOUT STD_LOGIC;
		HPS_SD_DATA_1		:	 INOUT STD_LOGIC;
		HPS_SD_DATA_2		:	 INOUT STD_LOGIC;
		HPS_SD_DATA_3		:	 INOUT STD_LOGIC;
		HPS_USB_CLKOUT		:	 IN STD_LOGIC;
		HPS_USB_DATA_0		:	 INOUT STD_LOGIC;
		HPS_USB_DATA_1		:	 INOUT STD_LOGIC;
		HPS_USB_DATA_2		:	 INOUT STD_LOGIC;
		HPS_USB_DATA_3		:	 INOUT STD_LOGIC;
		HPS_USB_DATA_4		:	 INOUT STD_LOGIC;
		HPS_USB_DATA_5		:	 INOUT STD_LOGIC;
		HPS_USB_DATA_6		:	 INOUT STD_LOGIC;
		HPS_USB_DATA_7		:	 INOUT STD_LOGIC;
		HPS_USB_DIR		:	 IN STD_LOGIC;
		HPS_USB_NXT		:	 IN STD_LOGIC;
		HPS_USB_STP		:	 OUT STD_LOGIC;
		HPS_SPIM_CLK		:	 OUT STD_LOGIC;
		HPS_SPIM_MISO		:	 IN STD_LOGIC;
		HPS_SPIM_MOSI		:	 OUT STD_LOGIC;
		HPS_SPIM_SS		:	 OUT STD_LOGIC;
		HPS_UART_RX		:	 IN STD_LOGIC;
		HPS_UART_TX		:	 OUT STD_LOGIC;
		HPS_CONV_USB_N		:	 INOUT STD_LOGIC;
		HPS_I2C1_SCLK		:	 INOUT STD_LOGIC;
		HPS_I2C1_SDAT		:	 INOUT STD_LOGIC;
		HPS_I2C2_SCLK		:	 INOUT STD_LOGIC;
		HPS_I2C2_SDAT		:	 INOUT STD_LOGIC;
		HPS_I2C_CONTROL		:	 INOUT STD_LOGIC;
		HPS_KEY_N		:	 INOUT STD_LOGIC;
		HPS_LED		:	 INOUT STD_LOGIC;
		HPS_LTC_GPIO		:	 INOUT STD_LOGIC;
		HPS_GSENSOR_INT		:	 INOUT STD_LOGIC;
		GPIO_0		:	 OUT STD_LOGIC_VECTOR(35 DOWNTO 0)
	);
END COMPONENT;